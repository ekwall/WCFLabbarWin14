//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace="ECUtbildning.HobbyContract", ConfigurationName="IHobbyContract")]
public interface IHobbyContract
{
    
    [System.ServiceModel.OperationContractAttribute(Action="ECUtbildning.HobbyContract/IHobbyContract/CapitalizeLetters", ReplyAction="ECUtbildning.HobbyContract/IHobbyContract/CapitalizeLettersResponse")]
    string CapitalizeLetters(string input);
    
    [System.ServiceModel.OperationContractAttribute(Action="ECUtbildning.HobbyContract/IHobbyContract/CapitalizeLetters", ReplyAction="ECUtbildning.HobbyContract/IHobbyContract/CapitalizeLettersResponse")]
    System.Threading.Tasks.Task<string> CapitalizeLettersAsync(string input);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IHobbyContractChannel : IHobbyContract, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class HobbyContractClient : System.ServiceModel.ClientBase<IHobbyContract>, IHobbyContract
{
    
    public HobbyContractClient()
    {
    }
    
    public HobbyContractClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public HobbyContractClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public HobbyContractClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public HobbyContractClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public string CapitalizeLetters(string input)
    {
        return base.Channel.CapitalizeLetters(input);
    }
    
    public System.Threading.Tasks.Task<string> CapitalizeLettersAsync(string input)
    {
        return base.Channel.CapitalizeLettersAsync(input);
    }
}
